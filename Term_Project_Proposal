1. 프로젝트 목표 및 내용 : 본 프로젝트를 통해 제작하고자 하는 프로그램은 '사용 후기를 통한 제품 추천 서비스'이다. 
사용자가 입력한 검색어 (제품명. ex. 게이밍 마우스)를 Naver Shopping 검색 결과에서 찾아 출력하고, 동일한 키워드를 Naver blog 검색 결과에 적용함으로써 사용자에게 해당 제품의 후기를 함께 출력한다. 
사용자가 입력한 값을 토대로 적절한 웹 크롤링을 통해 사용자가 원하는 제품의 후기를 출력하고, 핵심 키워드를 선택하여 사용자가 제품을 선택하는 데 도움이 되도록 하는 것이 본 프로젝트의 목표이다.

2. 주제 선정 이유 또는 프로젝트의 필요성 : 본 프로젝트의 주제를 이와 같이 선정한 이유는 '선택의 다양성' 때문이다. 
필자 또한 인터넷 쇼핑을 자주 하는 편인데, 사고자 하는 제품에 대해 정확히 알고 검색하는 경우가 드물다. 대부분 제품의 후기를 블로그 등을 통해 먼저 본 뒤 쇼핑 페이지에서 제품을 찾아 구매하는 경우가 많은데, 이러한 과정이 매우 번거롭다고 생각한다. 
인터넷 쇼핑의 경우에는 대부분 제품의 종류를 먼저 나열한 뒤 한 제품을 고르면 댓글과 같은 시스템으로 후기가 보여지는 경우가 많으며, 후기와 제품 정보가 동시에 나오는 경우는 드물다. 이 때문에 사고자 하는 제품의 종류를 선택하기 위해서는 쇼핑 사이트에 제시된 제품의 정보, 카테고리, 분류 기준과 별도로 제품 후기를 검색해야 한다는 번거로움이 발생한다.
또한, 제품에 대한 사전정보가 없는 사람들, 혹은 다른 사람들이 사용한 경험을 토대로 제품을 결정하고 싶은 사람들에게는 기존 시스템이 효율적이지 않을 수 있다. 제품의 후기를 중심적으로 참고하는 사람들에게 제품의 기능적인 정보만을 보여주거나, 댓글을 통한 적은 후기를 보여주는 것은 소비자가 원하는 것이 아니기 때문이다. 
따라서 한 프로그램에 제품의 기능과 같은 객관적인 기준뿐만 아니라 다른 사람들의 사용 후기와 같은 정보들도 함께 소비자에게 보여줌으로써 소비자가 원하는 제품을 선택하는 데 도움을 주고, 다양한 기준, 후기로부터 정보를 얻으면서 제품 선택의 방향성을 넓히고자 본 프로젝트를 기획하게 되었다.

3. 데이터 획득 
 1) Naver Shopping 검색 API : 사용자에게 입력받은 값을 토대로 반환된 값을 출력하여 보여준다. 입력값은 사용자가 구입하고자 하는 제품의 키워드 (ex. 게이밍 마우스)이며, 키워드에 해당하는 Naver Shopping 탭 내의 결과 (제품 리스트)를 반환한다.
 2) Naver blog 검색 API : 사용자가 입력한 값 (ex. 게이밍 마우스)을 토대로 블로그 검색 결과를 출력하여 리스트로 보여준다. “입력한 값 + ‘후기’”을 입력값으로 하여 API에 요청하면, 이에 따른 Naver blog 검색 결과를 반환한다. 
 3) Naver 오타변환 API : 사용자의 입력값에 오탈자가 있을 경우를 대비하여 사용한다. 예를 들어, 정상 단어인 ‘게이밍 마우스’가 아닌 ‘게임미 마오스’와 같은 오탈자를 입력하면, 수정된 결과인 ‘게이밍 마우스’를 출력한 뒤, 수정 여부를 묻는다. 이때 사용자는 오탈자를 수정하여 검색할지, 수정하지 않고 그대로 검색할지를 결정한다.

4. 구현 내용
 1) 사용자에게 관심 있는 제품에 대한 키워드를 검색어의 형태로 입력(input) 받는다. 이때 파이썬 내의 input 함수를 사용한다.
 2) Naver blog API를 이용하여 사용자가 입력한 키워드에 대한 제품의 블로그 후기 리스트를 출력한다. (ex. ‘게이밍 마우스‘ -> ’게이밍 마우스 후기‘로 검색)
 3) 출력된 리스트 중에서 사용자가 자유롭게 제품 후기를 찾아 탐색한다.
 4) 사용자가 후기를 탐색한 후 자세한 제품을 선택하면, 해당 제품명을 다음 API의 입력값으로 설정한다.
 5) Naver Shopping API를 이용하여 사용자가 선택한 제품의 제품명을 입력값으로 하여 쇼핑 검색 결과를 제품 리스트로 출력한다.
 6) 필요한 경우, 제품 리스트를 확인한 사용자가 최종 결정할 제품을 선택할 수 있도록 한다.
 7) 만약 1)의 입력값에 오탈자가 있을 경우, Naver 오타 변환 API를 이용하여 수정된 입력값을 출력한다.
 8) 수정된 입력값을 검색어에 적용할지 사용자에게 묻는다. 만약 사용자가 수정을 원하면 수정된 입력값을 2)의 입력값으로 수정한다.
